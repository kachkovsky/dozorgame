package com.dozor.ui.game;

import com.dozor.game.beans.Game;
import com.dozor.game.beans.GameUtils;
import com.dozor.game.beans.Unit;
import com.dozor.langs.LocaleBundle;
import com.dozor.ui.Dialogs;
import com.dozor.ui.send.GameEventsSender;
import java.awt.Component;
import java.util.ArrayList;
import java.util.Arrays;

/**
 *
 * @author IGOR-K
 */
public class PlayerJPanel extends javax.swing.JPanel {

    /**
     * Creates new form PlayerJPanel
     */
    public PlayerJPanel() {
        initComponents();
    }

    public void setFireable(int stage) {
        for (Component c : jPanelUnits.getComponents()) {
            if (c instanceof UnitJPanel) {
                UnitJPanel unitPanel = (UnitJPanel) c;
                unitPanel.setFireable(stage);
            }
        }
    }

    public void setSendPointsFromPanels(int countOfUnits) {
        Integer[] arr = new Integer[countOfUnits];
        try {
            for (Component c : jPanelUnits.getComponents()) {
                if (c instanceof UnitJPanel) {
                    UnitJPanel unitPanel = (UnitJPanel) c;
                    Integer points = unitPanel.getPoints();
                    arr[unitPanel.getUnitIndex()] = points;
                    if (points == null || points.intValue() < 0) {
                        throw new RuntimeException("points not valid!!!");
                    }
                }
            }
            GameEventsSender.getInstance().sendTribunalPoints(Arrays.asList(arr));
        } catch (Exception e) {
            System.err.print(e);
            Dialogs.showErrDialog(this,
                    LocaleBundle.getInstance().getString("incorrect_tribunal_points"),
                    LocaleBundle.getInstance().getString("client_error"));
        }
    }

    public void setTribunalableUnits() {
        for (Component c : jPanelUnits.getComponents()) {
            if (c instanceof UnitJPanel) {
                UnitJPanel unitPanel = (UnitJPanel) c;
                unitPanel.setTribunalable();
            }
        }
    }

    public void setPlayer(Game game, int playerIndex) {
        jLabelInfo.setText(String.format(LocaleBundle.getInstance().getString("player_info"),
                game.getPlayers().get(playerIndex).getNick(),
                game.getPlayers().get(playerIndex).getEvidences()));
        jPanelUnits.removeAll();
        for (int i = 0; i < game.getPlayers().get(playerIndex).getUnitsList().size(); i++) {
            UnitJPanel up = new UnitJPanel();
            up.setUnit(game, playerIndex, i);
            jPanelUnits.add(up);
        }
        this.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelInfo = new javax.swing.JLabel();
        jPanelUnits = new javax.swing.JPanel();

        jLabelInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelInfo.setText("jLabel1");
        jLabelInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jPanelUnits.setLayout(new javax.swing.BoxLayout(jPanelUnits, javax.swing.BoxLayout.X_AXIS));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JPanel jPanelUnits;
    // End of variables declaration//GEN-END:variables
}
